version: '3.8'

services:
  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    depends_on:
      - api
    networks:
      - sneakersniper-net
    extends:
      file: docker-compose.dev.yml
      service: frontend

  # API Gateway
  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
      - "8001:8001" # Metrics port
    depends_on:
      - redis
      - postgres
    networks:
      - sneakersniper-net
    extends:
      file: docker-compose.dev.yml
      service: api

  # Monitor Service
  monitor:
    build:
      context: ./services/monitor
      dockerfile: Dockerfile
    depends_on:
      - redis
    networks:
      - sneakersniper-net
    restart: unless-stopped
    extends:
      file: docker-compose.dev.yml
      service: monitor

  # Checkout Service
  checkout:
    build:
      context: ./services/checkout
      dockerfile: Dockerfile
    depends_on:
      - redis
      - postgres
    networks:
      - sneakersniper-net
    deploy:
      replicas: 3  # Multiple workers for parallel checkouts
    extends:
      file: docker-compose.dev.yml
      service: checkout

  # Celery Worker
  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    depends_on:
      - redis
      - postgres
    networks:
      - sneakersniper-net
    extends:
      file: docker-compose.dev.yml
      service: worker

  # Celery Beat (Scheduler)
  beat:
    build:
      context: ./worker
      dockerfile: Dockerfile
    depends_on:
      - redis
    networks:
      - sneakersniper-net
    extends:
      file: docker-compose.dev.yml
      service: beat

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - sneakersniper-net

  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - sneakersniper-net
    extends:
      file: docker-compose.dev.yml
      service: postgres

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./infra/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - sneakersniper-net

  # Grafana
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - sneakersniper-net
    extends:
      file: docker-compose.dev.yml
      service: grafana

volumes:
  redis-data:
  postgres-data:
  prometheus-data:
  grafana-data:

networks:
  sneakersniper-net:
    driver: bridge